package kr.or.ddit.medical.clinc.controller;

import java.util.List;

import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.medical.clinc.service.ClinicService;
import kr.or.ddit.medical.clinc.vo.ClinicVO;
import kr.or.ddit.medical.clinc.vo.DiseaseVO;
import kr.or.ddit.medical.clinc.vo.InspectionVO;
import kr.or.ddit.medical.clinc.vo.MedicineVO;
import kr.or.ddit.medical.clinc.vo.PresDocVO;
import kr.or.ddit.medical.clinc.vo.PrescriptionVO;
import kr.or.ddit.medical.vo.PatntStatVO;
import lombok.RequiredArgsConstructor;

/**
 * 의사 진료실 - 상병검색/ 약품검색 / 약품 즐찾리스트
 * 
 * @author PC-10
 *
 */
@Controller
@RequestMapping("/clinic")
@RequiredArgsConstructor
public class DoctorClinicRetrieveController {

	@Inject
	private final ClinicService service;

	// jsp 접근 GET메서드
	@GetMapping("clinicRetrieve.do")
	public String clinicRetrieve(Model model) {
		List<InspectionVO> genList = service.retrieveGenInsList();
		List<InspectionVO> equList = service.retrieveEuqInsList();

		model.addAttribute("genInsList", genList);
		model.addAttribute("equInsList", equList);

		return "clinic/clinic";
	}

	// 진료 - 상병 검색
	@GetMapping(value = "diseaseSearch.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public List<DiseaseVO> diseaseSearch(@RequestParam("what") String disName) {
		List<DiseaseVO> disList = service.retrieveDiseaseList(disName);
		return disList;
	}

	// 진료 - 약품 검색
	@GetMapping(value = "medicineSearch.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public List<MedicineVO> medicineSearch(@RequestParam("what") String mediName) {
		List<MedicineVO> mediList = service.retrieveMedicineList(mediName);
		service.SearchCnt(mediName);
		return mediList;
	}

	// 진료 - 약품 즐찾리스트
	@GetMapping(value = "popularMedicineList.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public List<MedicineVO> popularMedicineList() {
		List<MedicineVO> popList = service.popluarMedicineList();
		return popList;
	}

	// 환자 조회 (진료중, 진료대기중)
	@GetMapping(value = "patientView.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public List<PatntStatVO> patientView() {
		List<PatntStatVO> patient = service.retrievePatntStat();
		return patient;
	}

	// 환자의 과거 처방 내역 조회
	@GetMapping(value = "pastMediView.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public List<PresDocVO> pastMediView(@RequestParam("patntCode") String patntCode) {
		List<PresDocVO> medi = service.retrievePatPastMedi(patntCode);
		return medi;
	}

	// 진료대기 -> 진료중 상태 변경
	@GetMapping(value = "statInsert.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public boolean stateInsert(@RequestParam("recCode") String recCode, @RequestParam("fcltyCode") String fcltyCode) {

		PatntStatVO patnt = new PatntStatVO();
		patnt.setRecCode(recCode);
		patnt.setFcltyCode(fcltyCode);

		boolean patntStat = service.createPatntStat(patnt);

		return patntStat;

	}

	// 외래진료 오더 추가(진료내용, 상병)
	@GetMapping(value = "dssOrderInsert.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public boolean dssOrderInsert(@RequestParam("recCode") String recCode
								,@RequestParam("dssCode") String dssCode
								,@RequestParam("dssNo") int dssNo
								,@RequestParam("clinicContent") String clinicContent
								,@RequestParam(value = "insYn", required = false) String insYn
								){

		ClinicVO clinic = new ClinicVO();
		clinic.setRecCode(recCode);
		clinic.setDssCode(dssCode);
		clinic.setDssNo(dssNo);
		clinic.setClinicContent(clinicContent);
		if (insYn != null) {
			clinic.setInsYn(insYn);
		}

		boolean clinicOrder = service.createDssOrder(clinic);

		return clinicOrder;

	}

	// clinicCode 조회
	@GetMapping(value = "getClinicCode.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public ClinicVO getClinicCode(@RequestParam("recCode") String recCode) {
		ClinicVO clinicCode = service.retrieveClinicCd(recCode);
		return clinicCode;
	}

	// presCode 조회
	@GetMapping(value = "getPresCode.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public PrescriptionVO getPresCode(@RequestParam("clinicCode") String clinicCode) {
		PrescriptionVO presCode = service.retrievePresCd(clinicCode);
		return presCode;
	}

//	// 진료처방내역 오더 추가(의약품) + 환자상태 update(015 수납대기)
//	@GetMapping(value = "getPresCode.do", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
//	@ResponseBody
//	public boolean presOrderInsert() {
//		
//	}

}
